{"version":3,"sources":["webpack:///src/app/@core/data/user.ts","webpack:///src/app/auth/login-routing.module.ts","webpack:///src/app/auth/login.component.ts","webpack:///src/app/auth/login.component.html","webpack:///src/app/auth/login.module.ts"],"names":["User","routes","path","component","children","AuthRoutingModule","forChild","imports","exports","LoginComponent","toastrService","authService","service","options","cd","index","destroyByClick","duration","hasIcon","position","TOP_RIGHT","preventDuplicates","status","title","content","avail","login","user","subscribe","res","username","i","value","length","resourcealias","router","navigate","makeToast","cont","showToast","type","body","config","titleContent","show","onLogin","selector","templateUrl","AuthModule","declarations"],"mappings":"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","file":"auth-login-module-es5.js","sourcesContent":["export class User {\r\n    username: string;\r\n    password: string;\r\n}","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {\r\n}","\r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Component, Input, ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { NbLoginComponent, NbAuthService, NB_AUTH_OPTIONS } from '@nebular/auth';\r\nimport { User } from '../@core/data/user';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { UserResponse } from '../@core/data/user-response';\r\nimport { NbComponentStatus, NbGlobalPosition, NbGlobalPhysicalPosition, NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent extends NbLoginComponent {\r\n\r\n  @Input() user: User;\r\n\r\n  index = 1;\r\n  destroyByClick = true;\r\n  duration = 2000;\r\n  hasIcon = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  status: NbComponentStatus = 'primary';\r\n\r\n  title = 'Login Symfonia';\r\n  content = `Anda tidak mempunyai akses ke Symfonia`;\r\n\r\n  avail: boolean = false;\r\n\r\n  constructor(private toastrService: NbToastrService, private authService: LoginService, service: NbAuthService,\r\n    @Inject(NB_AUTH_OPTIONS) options: {}, cd: ChangeDetectorRef, routes: Router) {\r\n    super(service, options, cd, routes);\r\n  }\r\n\r\n  onLogin() {\r\n    this.authService.login(this.user).subscribe((res: UserResponse) => {\r\n      if (res.username != null) {\r\n        for (var i = 0; i < res.value.length; i++) {\r\n          if\r\n            (res.value[i].resourcealias == \"IDM.Symfonia\") {\r\n            this.avail = true;\r\n          }\r\n        }\r\n        if (this.avail) {\r\n          this.router.navigate(['/pages/partner-price']);\r\n        } else if (res.value.length == 0) {\r\n          this.makeToast(this.content);\r\n        }\r\n      } else {\r\n        this.makeToast(\"User tidak di temukan, atau password anda salah.\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  makeToast(cont: any) {\r\n    this.showToast(this.status, this.title, cont);\r\n  }\r\n\r\n  private showToast(type: NbComponentStatus, title: string, body: string) {\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      hasIcon: this.hasIcon,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      titleContent,\r\n      config);\r\n  }\r\n\r\n}","<h1 id=\"title\" class=\"title\">Sign In</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<div class=\"form-control-group\">\r\n  <label class=\"label\" for=\"input-email\">NIK:</label>\r\n  <input nbInput fullWidth [(ngModel)]=\"user.username\" #email=\"ngModel\" name=\"nik\" id=\"input-nik\" placeholder=\"NIK\"\r\n    autofocus>\r\n  <ng-container *ngIf=\"email.invalid && email.touched\">\r\n    <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n      NIK is required!\r\n    </p>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"form-control-group\">\r\n  <label class=\"label\" for=\"input-password\">Password:</label>\r\n  <input nbInput fullWidth [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"password\" type=\"password\"\r\n    id=\"input-password\" placeholder=\"Password\"\r\n    [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n    [required]=\"getConfigValue('forms.validation.password.required')\"\r\n    [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n    [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n    [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n  <ng-container *ngIf=\"password.invalid && password.touched \">\r\n    <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n      Password is required!\r\n    </p>\r\n    <p class=\"caption status-danger\" *ngIf=\"(password.errors?.minlength || password.errors?.maxlength)\">\r\n      Password should contains\r\n      from {{ getConfigValue('forms.validation.password.minLength') }}\r\n      to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n      characters\r\n    </p>\r\n  </ng-container>\r\n</div>\r\n\r\n<button nbButton fullWidth (click)=\"onLogin()\" status=\"success\" [disabled]=\"submitted\"\r\n  [class.btn-pulse]=\"submitted\">\r\n  Sign In\r\n</button>","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { NbAlertModule, NbButtonModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { AuthRoutingModule } from './login-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    AuthRoutingModule,\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}"]}