{"version":3,"sources":["webpack:///src/app/auth/login-routing.module.ts","webpack:///src/app/auth/login.component.ts","webpack:///src/app/auth/login.component.html","webpack:///src/app/auth/login.module.ts"],"names":["routes","path","component","children","loadChildren","then","m","PagesModule","AuthRoutingModule","forChild","imports","exports","LoginComponent","selector","templateUrl","AuthModule","declarations"],"mappings":"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","file":"auth-login-module-es5.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'pages',\r\n    loadChildren: () => import('../pages/pages.module')\r\n      .then(m => m.PagesModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {\r\n}","  \r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent extends NbLoginComponent {\r\n\r\n}","<h1 id=\"title\" class=\"title\">Sign In</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<!-- (ngSubmit)=\"login()\" -->\r\n<form #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">NIK:</label>\r\n    <input nbInput fullWidth [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"nik\" id=\"input-nik\" placeholder=\"NIK\"\r\n      autofocus>\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        NIK is required!\r\n      </p>\r\n      <!-- <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\r\n        NIK should be the real one!\r\n      </p> -->\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-password\">Password:</label>\r\n    <input nbInput fullWidth [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"password\" type=\"password\"\r\n      id=\"input-password\" placeholder=\"Password\"\r\n      [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n      [required]=\"getConfigValue('forms.validation.password.required')\"\r\n      [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n      [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n      [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Password is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"(password.errors?.minlength || password.errors?.maxlength)\">\r\n        Password should contains\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- <div class=\"form-control-group accept-group\">\r\n    <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\" *ngIf=\"rememberMe\">Remember me</nb-checkbox>\r\n    <a class=\"forgot-password\" routerLink=\"../request-password\">Forgot Password?</a>\r\n  </div> -->\r\n\r\n\r\n</form>\r\n\r\n<button nbButton fullWidth routerLink=\"pages\" status=\"success\" [disabled]=\"submitted || !form.valid\"\r\n  [class.btn-pulse]=\"submitted\">\r\n  Sign In\r\n</button>\r\n\r\n<!-- <section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\r\n  Or connect with:\r\n  <div class=\"socials\">\r\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\r\n      <a *ngIf=\"socialLink.link\"\r\n         [attr.target]=\"socialLink.target\"\r\n         [attr.class]=\"socialLink.icon\"\r\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\r\n      <a *ngIf=\"socialLink.url\"\r\n         [attr.href]=\"socialLink.url\"\r\n         [attr.target]=\"socialLink.target\"\r\n         [attr.class]=\"socialLink.icon\"\r\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\r\n    </ng-container>\r\n  </div>\r\n</section>\r\n\r\n<section class=\"another-action\" aria-label=\"Register\">\r\n  Don't have an account? <a class=\"text-link\" routerLink=\"../register\">Sign Up</a>\r\n</section> -->","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { NbAlertModule, NbButtonModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { AuthRoutingModule } from './login-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    AuthRoutingModule,\r\n\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}"]}