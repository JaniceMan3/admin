{"version":3,"sources":["./src/app/@core/data/user.ts","./src/app/auth/login-routing.module.ts","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/login.module.ts"],"names":[],"mappings":"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","file":"auth-login-module-es2015.js","sourcesContent":["export class User {\r\n    username: string;\r\n    password: string;\r\n}","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {\r\n}","\r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Component, Input, ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { NbLoginComponent, NbAuthService, NB_AUTH_OPTIONS } from '@nebular/auth';\r\nimport { User } from '../@core/data/user';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { UserResponse } from '../@core/data/user-response';\r\nimport { NbComponentStatus, NbGlobalPosition, NbGlobalPhysicalPosition, NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent extends NbLoginComponent {\r\n\r\n  @Input() user: User;\r\n\r\n  index = 1;\r\n  destroyByClick = true;\r\n  duration = 2000;\r\n  hasIcon = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  status: NbComponentStatus = 'primary';\r\n\r\n  title = 'Login Symfonia';\r\n  content = `Anda tidak mempunyai akses ke Symfonia`;\r\n\r\n  avail: boolean = false;\r\n\r\n  constructor(private toastrService: NbToastrService, private authService: LoginService, service: NbAuthService,\r\n    @Inject(NB_AUTH_OPTIONS) options: {}, cd: ChangeDetectorRef, routes: Router) {\r\n    super(service, options, cd, routes);\r\n  }\r\n\r\n  onLogin() {\r\n    this.authService.login(this.user).subscribe((res: UserResponse) => {\r\n      if (res.username != null) {\r\n        for (var i = 0; i < res.value.length; i++) {\r\n          if\r\n            (res.value[i].resourcealias == \"IDM.Symfonia\") {\r\n            this.avail = true;\r\n          }\r\n        }\r\n        if (this.avail) {\r\n          this.router.navigate(['/pages/partner-price']);\r\n        } else if (res.value.length == 0) {\r\n          this.makeToast(this.content);\r\n        }\r\n      } else {\r\n        this.makeToast(\"User tidak di temukan, atau password anda salah.\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  makeToast(cont: any) {\r\n    this.showToast(this.status, this.title, cont);\r\n  }\r\n\r\n  private showToast(type: NbComponentStatus, title: string, body: string) {\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      hasIcon: this.hasIcon,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      titleContent,\r\n      config);\r\n  }\r\n\r\n}","<h1 id=\"title\" class=\"title\">Sign In</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<div class=\"form-control-group\">\r\n  <label class=\"label\" for=\"input-email\">NIK:</label>\r\n  <input nbInput fullWidth [(ngModel)]=\"user.username\" #email=\"ngModel\" name=\"nik\" id=\"input-nik\" placeholder=\"NIK\"\r\n    autofocus>\r\n  <ng-container *ngIf=\"email.invalid && email.touched\">\r\n    <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n      NIK is required!\r\n    </p>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"form-control-group\">\r\n  <label class=\"label\" for=\"input-password\">Password:</label>\r\n  <input nbInput fullWidth [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"password\" type=\"password\"\r\n    id=\"input-password\" placeholder=\"Password\"\r\n    [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n    [required]=\"getConfigValue('forms.validation.password.required')\"\r\n    [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n    [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n    [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n  <ng-container *ngIf=\"password.invalid && password.touched \">\r\n    <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n      Password is required!\r\n    </p>\r\n    <p class=\"caption status-danger\" *ngIf=\"(password.errors?.minlength || password.errors?.maxlength)\">\r\n      Password should contains\r\n      from {{ getConfigValue('forms.validation.password.minLength') }}\r\n      to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n      characters\r\n    </p>\r\n  </ng-container>\r\n</div>\r\n\r\n<button nbButton fullWidth (click)=\"onLogin()\" status=\"success\" [disabled]=\"submitted\"\r\n  [class.btn-pulse]=\"submitted\">\r\n  Sign In\r\n</button>","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { NbAlertModule, NbButtonModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { AuthRoutingModule } from './login-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    AuthRoutingModule,\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}"],"sourceRoot":"webpack:///"}