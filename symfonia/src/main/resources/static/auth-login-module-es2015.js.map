{"version":3,"sources":["./src/app/auth/login-routing.module.ts","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/login.module.ts"],"names":[],"mappings":"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","file":"auth-login-module-es2015.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'pages',\r\n    loadChildren: () => import('../pages/pages.module')\r\n      .then(m => m.PagesModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {\r\n}","  \r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent extends NbLoginComponent {\r\n\r\n}","<h1 id=\"title\" class=\"title\">Sign In</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<!-- (ngSubmit)=\"login()\" -->\r\n<form #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">NIK:</label>\r\n    <input nbInput fullWidth [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"nik\" id=\"input-nik\" placeholder=\"NIK\"\r\n      autofocus>\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        NIK is required!\r\n      </p>\r\n      <!-- <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\r\n        NIK should be the real one!\r\n      </p> -->\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-password\">Password:</label>\r\n    <input nbInput fullWidth [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"password\" type=\"password\"\r\n      id=\"input-password\" placeholder=\"Password\"\r\n      [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n      [required]=\"getConfigValue('forms.validation.password.required')\"\r\n      [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n      [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n      [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Password is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"(password.errors?.minlength || password.errors?.maxlength)\">\r\n        Password should contains\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- <div class=\"form-control-group accept-group\">\r\n    <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\" *ngIf=\"rememberMe\">Remember me</nb-checkbox>\r\n    <a class=\"forgot-password\" routerLink=\"../request-password\">Forgot Password?</a>\r\n  </div> -->\r\n\r\n\r\n</form>\r\n\r\n<button nbButton fullWidth routerLink=\"pages\" status=\"success\" [disabled]=\"submitted || !form.valid\"\r\n  [class.btn-pulse]=\"submitted\">\r\n  Sign In\r\n</button>\r\n\r\n<!-- <section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\r\n  Or connect with:\r\n  <div class=\"socials\">\r\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\r\n      <a *ngIf=\"socialLink.link\"\r\n         [attr.target]=\"socialLink.target\"\r\n         [attr.class]=\"socialLink.icon\"\r\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\r\n      <a *ngIf=\"socialLink.url\"\r\n         [attr.href]=\"socialLink.url\"\r\n         [attr.target]=\"socialLink.target\"\r\n         [attr.class]=\"socialLink.icon\"\r\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\r\n    </ng-container>\r\n  </div>\r\n</section>\r\n\r\n<section class=\"another-action\" aria-label=\"Register\">\r\n  Don't have an account? <a class=\"text-link\" routerLink=\"../register\">Sign Up</a>\r\n</section> -->","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { NbAlertModule, NbButtonModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { AuthRoutingModule } from './login-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    AuthRoutingModule,\r\n\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n})\r\nexport class AuthModule {\r\n}"],"sourceRoot":"webpack:///"}